{"id":"js/utils/util.js","dependencies":[{"name":"/Users/Sethson/workspace/ao/client/package.json","includedInParent":true,"mtime":1537155786095},{"name":"/Users/Sethson/workspace/ao/client/.babelrc","includedInParent":true,"mtime":1536975258000}],"generated":{"js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = {\n  isInt: function isInt(n) {\n    return n % 1 === 0;\n  },\n\n  // modulo que funciona tambien para los numeros negativos\n  modulo: function modulo(num, max) {\n    return (num % max + max) % max;\n  },\n\n  splitNullArray: function splitNullArray(string) {\n    return string.split('\\0');\n  },\n\n  joinNullArray: function joinNullArray(array) {\n    return array.join('\\0');\n  }\n};\n/*\n // busqueda binaria que devuelve {found,index} donde index es el index donde esta o si no lo encontro donde estaria\n // despues se lo puede insertar con list.splice(resultadoBusqueda.index, 0, item);\n var binaryPosSearch = function (list, item, cmp_func) {\n var lo = 0;\n var hi = list.length;\n while (lo < hi) {\n var mid = ((lo + hi) / 2) | 0;\n var cmp_res = cmp_func(item, list[mid]);\n if (cmp_res == 0) {\n return {\n found: true,\n index: mid\n };\n } else if (cmp_res < 0) {\n hi = mid;\n } else {\n lo = mid + 1;\n }\n }\n\n return {\n found: false,\n index: hi\n };\n };\n\n function binarySearch(ar, el, compare_fn) {\n var m = 0;\n var n = ar.length - 1;\n while (m <= n) {\n var k = (n + m) >> 1;\n var cmp = compare_fn(el, ar[k]);\n if (cmp > 0) {\n m = k + 1;\n } else if(cmp < 0) {\n n = k - 1;\n } else {\n return k;\n }\n }\n return m;\n return -m - 1;\n }*/","map":{"mappings":[{"generated":{"line":6,"column":18},"source":"js/utils/util.js","original":{"line":1,"column":15}},{"name":"isInt","generated":{"line":7,"column":0},"source":"js/utils/util.js","original":{"line":2,"column":2}},{"generated":{"line":7,"column":9},"source":"js/utils/util.js","original":{"line":2,"column":9}},{"name":"n","generated":{"line":7,"column":24},"source":"js/utils/util.js","original":{"line":2,"column":19}},{"generated":{"line":7,"column":25},"source":"js/utils/util.js","original":{"line":2,"column":9}},{"generated":{"line":7,"column":27},"source":"js/utils/util.js","original":{"line":2,"column":22}},{"generated":{"line":8,"column":0},"source":"js/utils/util.js","original":{"line":3,"column":4}},{"name":"n","generated":{"line":8,"column":11},"source":"js/utils/util.js","original":{"line":3,"column":12}},{"generated":{"line":8,"column":15},"source":"js/utils/util.js","original":{"line":3,"column":16}},{"generated":{"line":8,"column":16},"source":"js/utils/util.js","original":{"line":3,"column":11}},{"generated":{"line":8,"column":21},"source":"js/utils/util.js","original":{"line":3,"column":23}},{"generated":{"line":8,"column":22},"source":"js/utils/util.js","original":{"line":3,"column":4}},{"generated":{"line":9,"column":0},"source":"js/utils/util.js","original":{"line":4,"column":3}},{"generated":{"line":9,"column":3},"source":"js/utils/util.js","original":{"line":1,"column":15}},{"generated":{"line":11,"column":0},"source":"js/utils/util.js","original":{"line":6,"column":2}},{"name":"modulo","generated":{"line":12,"column":0},"source":"js/utils/util.js","original":{"line":7,"column":2}},{"generated":{"line":12,"column":10},"source":"js/utils/util.js","original":{"line":7,"column":10}},{"name":"num","generated":{"line":12,"column":26},"source":"js/utils/util.js","original":{"line":7,"column":20}},{"generated":{"line":12,"column":29},"source":"js/utils/util.js","original":{"line":7,"column":10}},{"name":"max","generated":{"line":12,"column":31},"source":"js/utils/util.js","original":{"line":7,"column":25}},{"generated":{"line":12,"column":34},"source":"js/utils/util.js","original":{"line":7,"column":10}},{"generated":{"line":12,"column":36},"source":"js/utils/util.js","original":{"line":7,"column":30}},{"generated":{"line":13,"column":0},"source":"js/utils/util.js","original":{"line":8,"column":4}},{"generated":{"line":13,"column":11},"source":"js/utils/util.js","original":{"line":8,"column":11}},{"name":"num","generated":{"line":13,"column":12},"source":"js/utils/util.js","original":{"line":8,"column":13}},{"name":"max","generated":{"line":13,"column":18},"source":"js/utils/util.js","original":{"line":8,"column":19}},{"generated":{"line":13,"column":21},"source":"js/utils/util.js","original":{"line":8,"column":12}},{"name":"max","generated":{"line":13,"column":24},"source":"js/utils/util.js","original":{"line":8,"column":26}},{"generated":{"line":13,"column":27},"source":"js/utils/util.js","original":{"line":8,"column":11}},{"name":"max","generated":{"line":13,"column":31},"source":"js/utils/util.js","original":{"line":8,"column":33}},{"generated":{"line":13,"column":34},"source":"js/utils/util.js","original":{"line":8,"column":4}},{"generated":{"line":14,"column":0},"source":"js/utils/util.js","original":{"line":9,"column":3}},{"generated":{"line":14,"column":3},"source":"js/utils/util.js","original":{"line":1,"column":15}},{"name":"splitNullArray","generated":{"line":16,"column":0},"source":"js/utils/util.js","original":{"line":11,"column":2}},{"generated":{"line":16,"column":18},"source":"js/utils/util.js","original":{"line":11,"column":18}},{"name":"string","generated":{"line":16,"column":42},"source":"js/utils/util.js","original":{"line":11,"column":28}},{"generated":{"line":16,"column":48},"source":"js/utils/util.js","original":{"line":11,"column":18}},{"generated":{"line":16,"column":50},"source":"js/utils/util.js","original":{"line":11,"column":36}},{"generated":{"line":17,"column":0},"source":"js/utils/util.js","original":{"line":12,"column":4}},{"name":"string","generated":{"line":17,"column":11},"source":"js/utils/util.js","original":{"line":12,"column":11}},{"name":"split","generated":{"line":17,"column":18},"source":"js/utils/util.js","original":{"line":12,"column":18}},{"generated":{"line":17,"column":23},"source":"js/utils/util.js","original":{"line":12,"column":11}},{"generated":{"line":17,"column":24},"source":"js/utils/util.js","original":{"line":12,"column":24}},{"generated":{"line":17,"column":28},"source":"js/utils/util.js","original":{"line":12,"column":11}},{"generated":{"line":17,"column":29},"source":"js/utils/util.js","original":{"line":12,"column":4}},{"generated":{"line":18,"column":0},"source":"js/utils/util.js","original":{"line":13,"column":3}},{"generated":{"line":18,"column":3},"source":"js/utils/util.js","original":{"line":1,"column":15}},{"name":"joinNullArray","generated":{"line":20,"column":0},"source":"js/utils/util.js","original":{"line":15,"column":2}},{"generated":{"line":20,"column":17},"source":"js/utils/util.js","original":{"line":15,"column":17}},{"name":"array","generated":{"line":20,"column":40},"source":"js/utils/util.js","original":{"line":15,"column":27}},{"generated":{"line":20,"column":45},"source":"js/utils/util.js","original":{"line":15,"column":17}},{"generated":{"line":20,"column":47},"source":"js/utils/util.js","original":{"line":15,"column":34}},{"generated":{"line":21,"column":0},"source":"js/utils/util.js","original":{"line":16,"column":4}},{"name":"array","generated":{"line":21,"column":11},"source":"js/utils/util.js","original":{"line":16,"column":11}},{"name":"join","generated":{"line":21,"column":17},"source":"js/utils/util.js","original":{"line":16,"column":17}},{"generated":{"line":21,"column":21},"source":"js/utils/util.js","original":{"line":16,"column":11}},{"generated":{"line":21,"column":22},"source":"js/utils/util.js","original":{"line":16,"column":22}},{"generated":{"line":21,"column":26},"source":"js/utils/util.js","original":{"line":16,"column":11}},{"generated":{"line":21,"column":27},"source":"js/utils/util.js","original":{"line":16,"column":4}},{"generated":{"line":22,"column":0},"source":"js/utils/util.js","original":{"line":17,"column":3}},{"generated":{"line":23,"column":0},"source":"js/utils/util.js","original":{"line":1,"column":15}},{"generated":{"line":24,"column":0},"source":"js/utils/util.js","original":{"line":19,"column":0}}],"sources":{"js/utils/util.js":"export default {\n  isInt: function (n) {\n    return (n % 1) === 0;\n  },\n\n  // modulo que funciona tambien para los numeros negativos\n  modulo: function (num, max) {\n    return ((num % max) + max) % max;\n  },\n\n  splitNullArray: function (string) {\n    return string.split('\\u0000');\n  },\n\n  joinNullArray: function (array) {\n    return array.join('\\u0000');\n  },\n};\n/*\n // busqueda binaria que devuelve {found,index} donde index es el index donde esta o si no lo encontro donde estaria\n // despues se lo puede insertar con list.splice(resultadoBusqueda.index, 0, item);\n var binaryPosSearch = function (list, item, cmp_func) {\n var lo = 0;\n var hi = list.length;\n while (lo < hi) {\n var mid = ((lo + hi) / 2) | 0;\n var cmp_res = cmp_func(item, list[mid]);\n if (cmp_res == 0) {\n return {\n found: true,\n index: mid\n };\n } else if (cmp_res < 0) {\n hi = mid;\n } else {\n lo = mid + 1;\n }\n }\n\n return {\n found: false,\n index: hi\n };\n };\n\n function binarySearch(ar, el, compare_fn) {\n var m = 0;\n var n = ar.length - 1;\n while (m <= n) {\n var k = (n + m) >> 1;\n var cmp = compare_fn(el, ar[k]);\n if (cmp > 0) {\n m = k + 1;\n } else if(cmp < 0) {\n n = k - 1;\n } else {\n return k;\n }\n }\n return m;\n return -m - 1;\n }*/\n"},"lineCount":null}},"hash":"cf576508f34e2c070466c5a894eca4d5","cacheData":{"env":{}}}